{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danil\\\\study\\\\milk\\\\fend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [MilkData, setMilkData] = useState([]);\n  useEffect(() => {\n    const getData = async () => {\n      const response = await fetch(\"https://localhost:7175/api/weatherforecast\");\n      const MilkResults = await response.json();\n      setMilkData(MilkResults);\n    };\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: MilkData.map(w => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: w.summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: w.temperatureC\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lumzRvEnPM+6hlrm+8XKSusavM4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","App","MilkData","setMilkData","getData","response","fetch","MilkResults","json","map","w","summary","temperatureC"],"sources":["C:/Users/danil/study/milk/fend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\ninterface MilkInformation {\n  count: number;\n  // temperatureC: number;\n}\n\nfunction App() {\n  const [MilkData, setMilkData] = useState<MilkInformation[]>([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      const response = await fetch(\"https://localhost:7175/api/weatherforecast\");\n      const MilkResults = await response.json();\n      setMilkData(MilkResults);\n    }\n    getData();\n  }, [])\n\n  return (\n    <div>\n      {/* <h1>{MilkData.length}</h1> */}\n      {MilkData.map(w =>\n        <ul>\n          <li>{w.summary}</li>\n          <li>{w.temperatureC}</li>\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC;AAOnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGH,QAAQ,CAAoB,EAAE,CAAC;EAE/DD,SAAS,CAAC,MAAM;IACd,MAAMK,OAAO,GAAG,YAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;MAC1E,MAAMC,WAAW,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MACzCL,WAAW,CAACI,WAAW,CAAC;IAC1B,CAAC;IACDH,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,UAEGF,QAAQ,CAACO,GAAG,CAACC,CAAC,iBACb;MAAA,wBACE;QAAA,UAAKA,CAAC,CAACC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAM,eACpB;QAAA,UAAKD,CAAC,CAACE;MAAY;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QACtB;EACN;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GAvBQX,GAAG;AAAA,KAAHA,GAAG;AAyBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}