{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danil\\\\study\\\\milk\\\\fend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [milkData, setMilkData] = useState([]);\n  useEffect(() => {\n    const getData = async () => {\n      const response = await fetch(\" https://localhost:7023/api/milk\");\n      const MilkResults = await response.json();\n      setMilkData(MilkResults);\n    };\n    getData();\n  }, []);\n  return milkData.map((m, index) => {\n    return;\n    /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: m.count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: m.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 14\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this), \";\"]\n    }, void 0, true);\n  });\n}\n_s(App, \"Td8ExXx0Er4ki6KK51KrhbQx5Ts=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","App","milkData","setMilkData","getData","response","fetch","MilkResults","json","map","m","index","count","name"],"sources":["C:/Users/danil/study/milk/fend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\ntype MilkInformation = {\n  count: number;\n  name: string;\n  // temperatureC: number;\n}\n\nfunction App() {\n  const [milkData, setMilkData] = useState<MilkInformation[]>([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      const response = await fetch(\" https://localhost:7023/api/milk\");\n      const MilkResults = await response.json();\n      setMilkData(MilkResults);\n    }\n    getData();\n  }, [])\n\n  return milkData.map((m, index) => {\n    return \n    <>\n    <div key={index}>\n             <h2>{m.count}</h2>\n             <p>{m.name}</p>\n           </div>;\n           </>\n  });\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC;AAAA;AAQnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGH,QAAQ,CAAoB,EAAE,CAAC;EAE/DD,SAAS,CAAC,MAAM;IACd,MAAMK,OAAO,GAAG,YAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;MAChE,MAAMC,WAAW,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MACzCL,WAAW,CAACI,WAAW,CAAC;IAC1B,CAAC;IACDH,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,QAAQ,CAACO,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;IAChC;IACA;MAAA,wBACA;QAAA,wBACS;UAAA,UAAKD,CAAC,CAACE;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eAClB;UAAA,UAAIF,CAAC,CAACG;QAAI;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA,GAFdF,KAAK;QAAA;QAAA;QAAA;MAAA,QAGF,KACN;IAAA,gBAAG;EACZ,CAAC,CAAC;AACJ;AAAC,GArBQV,GAAG;AAAA,KAAHA,GAAG;AAuBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}