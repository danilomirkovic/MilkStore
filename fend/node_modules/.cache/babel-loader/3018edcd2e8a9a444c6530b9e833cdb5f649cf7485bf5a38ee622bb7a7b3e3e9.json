{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danil\\\\study\\\\milk\\\\fend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductInfo = () => {\n  _s();\n  const [milkData, setMilkData] = useState({});\n  const [quantity, setQuantity] = useState(1);\n  let {\n    id\n  } = useParams();\n  useEffect(() => {\n    // Fetch data from API\n    const fetchData = async () => {\n      const response = await axios.get(`https://localhost:7237/Milk/${id}`);\n      setMilkData(response.data);\n    };\n    fetchData().then(r => console.log(r));\n  }, [id]);\n  const handleOrder = async () => {\n    const storage = milkData.storage - quantity;\n    try {\n      const requestOptions = {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(storage)\n      };\n      const response = await fetch(`https://localhost:7237/Milk/${id}`, requestOptions);\n      if (response.ok) {\n        // Update the component's state with the updated storage\n        setMilkData({\n          ...milkData,\n          storage: storage\n        });\n        // Show success message\n        alert(`Successfully ordered ${quantity} liter(s) of ${milkData.name}`);\n      } else {\n        alert('Failed to update storage');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-md\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-pink-200 rounded-lg overflow-hidden\",\n          children: milkData && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-6 py-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-bold text-xl mb-2\",\n                children: milkData.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700 text-base\",\n                children: [\"Type: \", milkData.type]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700 text-base\",\n                children: [\"Storage: \", milkData.storage, \" liter\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 35\n              }, this), milkData.storage > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block font-medium text-sm mb-2\",\n                  children: \"Quantity:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"range\",\n                  min: 1,\n                  max: milkData.storage,\n                  value: quantity,\n                  onChange: e => setQuantity(e.target.valueAsNumber),\n                  className: \"w-full bg-white rounded-md border border-gray-400 py-2 px-3 text-base leading-5 focus:outline-none focus:border-blue-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center\",\n                  children: [quantity, \" liter(s)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"bg-blue-500 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md mt-4\",\n                  onClick: handleOrder,\n                  children: \"Order\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true) :\n              /*#__PURE__*/\n              // Show out of stock message in red bold text\n              _jsxDEV(\"div\", {\n                className: \"text-center text-red-500 font-bold\",\n                children: \"Out of stock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n};\n_s(ProductInfo, \"BDbYB+DhVLqTllZvdNMQD0tS84c=\", true);\n_c = ProductInfo;\nexport default ProductInfo;\nvar _c;\n$RefreshReg$(_c, \"ProductInfo\");","map":{"version":3,"names":["React","useEffect","useState","ProductInfo","milkData","setMilkData","quantity","setQuantity","id","useParams","fetchData","response","axios","get","data","then","r","console","log","handleOrder","storage","requestOptions","method","headers","body","JSON","stringify","fetch","ok","alert","name","error","type","e","target","valueAsNumber"],"sources":["C:/Users/danil/study/milk/fend/src/App.tsx"],"sourcesContent":["import { count } from 'console';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\n\ninterface Props {\n  id: string;\n}\n\nconst ProductInfo: React.FunctionComponent<Props> = () => {\n  const [milkData, setMilkData] = useState<any>({});\n  const [quantity, setQuantity] = useState<number>(1);\n  let { id } = useParams();\n\n  useEffect(() => {\n      // Fetch data from API\n      const fetchData = async () => {\n          const response = await axios.get(`https://localhost:7237/Milk/${id}`);\n          setMilkData(response.data);\n      };\n      fetchData().then(r => console.log(r));\n  }, [id]);\n\n  const handleOrder = async () => {\n      const storage = milkData.storage - quantity;\n      try {\n          const requestOptions = {\n              method: 'PATCH',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify(storage)\n          }\n          const response = await fetch(`https://localhost:7237/Milk/${id}`, requestOptions);\n          if (response.ok) {\n              // Update the component's state with the updated storage\n              setMilkData({...milkData, storage: storage});\n              // Show success message\n              alert(`Successfully ordered ${quantity} liter(s) of ${milkData.name}`);\n          } else {\n              alert('Failed to update storage');\n          }\n      } catch (error) {\n          console.log(error);\n      }\n  };\n\n\n  return (\n      <div>\n  \n          \n          <div className=\"flex items-center justify-center text-center\">\n              <div className=\"w-full max-w-md\">\n                  <div className=\"bg-pink-200 rounded-lg overflow-hidden\">\n                      {milkData && (\n                          <div className=\"p-6\">\n                              <div className=\"px-6 py-4\">\n                                  <div className=\"font-bold text-xl mb-2\">{milkData.name}</div>\n                                  <p className=\"text-gray-700 text-base\">\n                                      Type: {milkData.type}\n                                  </p>\n                                  <p className=\"text-gray-700 text-base\">\n                                      Storage: {milkData.storage} liter\n                                  </p>\n                                  {milkData.storage > 0 ? (\n                                      <>\n                                      <label className=\"block font-medium text-sm mb-2\">\n                                          Quantity:\n                                      </label>\n                                      <input\n                                          type=\"range\"\n                                          min={1}\n                                          max={milkData.storage}\n                                          value={quantity}\n                                          onChange={(e) => setQuantity(e.target.valueAsNumber)}\n                                          className=\"w-full bg-white rounded-md border border-gray-400 py-2 px-3 text-base leading-5 focus:outline-none focus:border-blue-500\"\n                                      />\n                                      <div className=\"text-center\">{quantity} liter(s)</div>\n                                      <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md mt-4\" onClick={handleOrder}>\n                                      Order\n                                      </button>\n                                      </>\n                                  ) : (\n                                      // Show out of stock message in red bold text\n                                      <div className=\"text-center text-red-500 font-bold\">Out of stock</div>\n                                  )}\n                              </div>\n                          </div>\n                      )}\n                  </div>\n              </div>\n          </div>\n          <Footer />\n      </div>\n  );\n};\n\nexport default ProductInfo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}